{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek Kumar Roy\\\\OneDrive\\\\Desktop\\\\finance_tracker\\\\finance_tracker\\\\src\\\\components\\\\ReCaptcha.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReCaptchaV2Label = ({\n  onVerify\n}) => {\n  _s();\n  const captchaRef = useRef(null);\n  useEffect(() => {\n    // Dynamically load the reCAPTCHA script\n    if (!window.grecaptcha) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://www.google.com/recaptcha/api.js\";\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        waitForGrecaptcha().then(renderRecaptcha);\n      };\n      return () => {\n        document.body.removeChild(script);\n      };\n    } else {\n      waitForGrecaptcha().then(renderRecaptcha);\n    }\n  }, []);\n\n  // Function to wait for the grecaptcha object to be available\n  const waitForGrecaptcha = () => {\n    return new Promise(resolve => {\n      const interval = setInterval(() => {\n        if (window.grecaptcha && window.grecaptcha.render) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, 100); // Check every 100ms\n    });\n  };\n\n  // Function to render the reCAPTCHA widget\n  const renderRecaptcha = () => {\n    if (captchaRef.current) {\n      window.grecaptcha.render(captchaRef.current, {\n        sitekey: process.env.REACT_APP_SITE_KEY_RECAPTCHA,\n        callback: token => onVerify(token) // Callback function when reCAPTCHA is completed\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: captchaRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ReCaptchaV2Label, \"AJtRmFCxB+yKFu5XR+50jN3Eito=\");\n_c = ReCaptchaV2Label;\nexport default ReCaptchaV2Label;\nvar _c;\n$RefreshReg$(_c, \"ReCaptchaV2Label\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ReCaptchaV2Label","onVerify","_s","captchaRef","window","grecaptcha","script","document","createElement","src","async","defer","body","appendChild","onload","waitForGrecaptcha","then","renderRecaptcha","removeChild","Promise","resolve","interval","setInterval","render","clearInterval","current","sitekey","process","env","REACT_APP_SITE_KEY_RECAPTCHA","callback","token","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhishek Kumar Roy/OneDrive/Desktop/finance_tracker/finance_tracker/src/components/ReCaptcha.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst ReCaptchaV2Label = ({ onVerify }) => {\r\n  const captchaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Dynamically load the reCAPTCHA script\r\n    if (!window.grecaptcha) {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://www.google.com/recaptcha/api.js\";\r\n      script.async = true;\r\n      script.defer = true;\r\n      document.body.appendChild(script);\r\n\r\n      script.onload = () => {\r\n        waitForGrecaptcha().then(renderRecaptcha);\r\n      };\r\n\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      };\r\n    } else {\r\n      waitForGrecaptcha().then(renderRecaptcha);\r\n    }\r\n  }, []);\r\n\r\n  // Function to wait for the grecaptcha object to be available\r\n  const waitForGrecaptcha = () => {\r\n    return new Promise((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (window.grecaptcha && window.grecaptcha.render) {\r\n          clearInterval(interval);\r\n          resolve();\r\n        }\r\n      }, 100); // Check every 100ms\r\n    });\r\n  };\r\n\r\n  // Function to render the reCAPTCHA widget\r\n  const renderRecaptcha = () => {\r\n    if (captchaRef.current) {\r\n      window.grecaptcha.render(captchaRef.current, {\r\n        sitekey: process.env.REACT_APP_SITE_KEY_RECAPTCHA,\r\n        callback: (token) => onVerify(token), // Callback function when reCAPTCHA is completed\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <div ref={captchaRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReCaptchaV2Label;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACQ,MAAM,CAACC,UAAU,EAAE;MACtB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,yCAAyC;MACtDH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;MACnBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;MAEjCA,MAAM,CAACQ,MAAM,GAAG,MAAM;QACpBC,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACC,eAAe,CAAC;MAC3C,CAAC;MAED,OAAO,MAAM;QACXV,QAAQ,CAACK,IAAI,CAACM,WAAW,CAACZ,MAAM,CAAC;MACnC,CAAC;IACH,CAAC,MAAM;MACLS,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACC,eAAe,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMF,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAO,IAAII,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAIlB,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAACkB,MAAM,EAAE;UACjDC,aAAa,CAACH,QAAQ,CAAC;UACvBD,OAAO,CAAC,CAAC;QACX;MACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMH,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAId,UAAU,CAACsB,OAAO,EAAE;MACtBrB,MAAM,CAACC,UAAU,CAACkB,MAAM,CAACpB,UAAU,CAACsB,OAAO,EAAE;QAC3CC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,4BAA4B;QACjDC,QAAQ,EAAGC,KAAK,IAAK9B,QAAQ,CAAC8B,KAAK,CAAC,CAAE;MACxC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBlC,OAAA;MAAKmC,GAAG,EAAE/B;IAAW;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpC,EAAA,CAnDIF,gBAAgB;AAAAuC,EAAA,GAAhBvC,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}