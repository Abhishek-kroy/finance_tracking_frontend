{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import Navbar from\"../components/Navbar\";import Footer from\"../components/Footer\";import BudgetReport from\"../components/BudgetReport\";import html2pdf from\"html2pdf.js\";// Import the html2pdf library\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GenerateReport=_ref=>{let{mode,setMode}=_ref;const[budget,setBudgets]=useState([]);const[loading,setLoading]=useState(false);const[aiLoading,setAiLoading]=useState(false);const[error,setError]=useState(\"\");const[aiResponse,setAiResponse]=useState(\"\");const navigate=useNavigate();// Fetch budget data\nuseEffect(()=>{const fetchBudgets=async()=>{const token=localStorage.getItem(\"token\");if(!token){setError(\"Unauthorized! Please log in again.\");navigate(\"/login\");return;}console.log(\"Fetching budgets...\");try{setLoading(true);const response=await axios.get(\"https://finance-tracker-backend-0h5z.onrender.com/api/v1/getBudgetWithExpenses\",{headers:{Authorization:\"Bearer \".concat(token)}});console.log(\"Budget data received:\",response.data.budgets);// Log the received data\nsetBudgets(response.data.budgets||[]);}catch(err){console.error(\"Error fetching budgets:\",err);setError(\"Failed to fetch budget data. Please try again later.\");}finally{setLoading(false);}};fetchBudgets();// eslint-disable-next-line\n},[]);// Fetch AI response based on budget data\nuseEffect(()=>{const fetchData=async()=>{if(!budget.length||!Array.isArray(budget)){console.log(\"No valid budget data to process for AI response.\");return;}let budgetDetail=\"\";budget.forEach(b=>{budgetDetail+=\"Budget Name: \".concat(b.name,\"\\n\");budgetDetail+=\"Total Amount for Budget: \".concat(b.amount,\"\\n\");budgetDetail+=\"Spent Amount: \".concat(b.spentAmount,\"\\n\");budgetDetail+=\"Start Date: \".concat(b.startDate,\"\\n\");budgetDetail+=\"End Date: \".concat(b.endDate,\"\\n\");if(b.expenses&&b.expenses.length>0){budgetDetail+=\"  Expenses:\\n\";b.expenses.forEach(e=>{budgetDetail+=\"    - Amount: \".concat(e.amount,\"\\n\");budgetDetail+=\"      Date: \".concat(e.date,\"\\n\");budgetDetail+=\"      Description: \".concat(e.description||\"No description available\",\"\\n\");});}else{budgetDetail+=\"  No expenses recorded for this budget.\\n\";}budgetDetail+='\\n';// Separate budgets with a blank line\n});const promptData={prompt:\"Generate a detailed, styled budget report using Tailwind CSS, formatted for web rendering. The report should contain a series of individual sections for each budget, each in its own div with appropriate spacing from other sections. For each budget, include the following details:\\n\\n1. **Budget Overview**:\\n   - Total Amount: Display the total allocated amount for the budget.\\n   - Spent Amount: Show the total amount spent from the budget.\\n   - Remaining: Display the remaining balance. If overspent, display 'Overspent' with the negative amount in red.\\n   - Start Date: Display the starting date of the budget period.\\n   - End Date: Display the end date of the budget period.\\n\\n2. **Expense Details**:\\n   - List each recorded expense in an unordered list.\\n   - Each expense should include:\\n     - Amount: The cost of the expense.\\n     - Date: The date when the expense occurred.\\n     - Description: Provide a brief description if available, or state 'No description available.'\\n\\n3. **Suggestions**:\\n   - Offer 2-3 actionable suggestions for improving budget management based on the observed spending behavior (e.g., ways to reduce overspending, organize spending, etc.).\\n\\n4. **Styling Guidelines**:\\n   - Use Tailwind CSS classes to ensure the report is styled clearly and responsively.\\n   - Apply padding 'p-4', spacing 'space-y-4', borders 'border', and shadows 'shadow-md' for each section.\\n   - Headings should have bold text 'font-bold' and appropriate sizes (e.g., 'text-lg', 'text-xl').\\n   - For important details (like overspent amounts), use contrasting colors such as red 'text-red-500' to draw attention.\\n   - Ensure the layout is responsive and visually appealing, keeping spacing consistent and details clearly separated.\\n\\nThe final response should be wrapped in a single <div> element containing all the formatted sections with Tailwind CSS classes applied to ensure proper styling and structure. The budget details (including amounts, expenses, and suggestions) are as follows:\\n\\n\"+budgetDetail};try{setAiLoading(true);const token=localStorage.getItem(\"token\");if(!token){setError(\"Unauthorized! Please log in again.\");navigate(\"/login\");return;}const response=await axios.post(\"https://finance-tracker-backend-0h5z.onrender.com/api/v1/getairesponse\",promptData,// Correctly pass the promptData here\n{headers:{Authorization:\"Bearer \".concat(token)}});console.log(\"AI response received:\",response.data);// Log the AI response\nconst responseData=response.data.response.replace(/```html|```/g,'');// Now set the cleaned response to the state variable\nsetAiResponse(responseData);}catch(error){console.error(\"Error fetching AI response:\",error);setError(\"Failed to fetch AI response. Please try again later.\");}finally{setAiLoading(false);}};fetchData();// eslint-disable-next-line\n},[budget]);// Function to download PDF\nconst downloadPDF=()=>{const element=document.getElementById(\"budget-report\");const options={margin:0,filename:'budget-report.pdf',html2canvas:{scale:1.5},jsPDF:{unit:'in',format:'letter',orientation:'portrait'}};html2pdf().from(element).set(options).save();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"Finance Tracker - Your Ultimate Finance Management Tool\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"description\",content:\"Simplify your finances with Finance Tracker. Track expenses, set budgets, and stay on top of your financial goals.\"}),/*#__PURE__*/_jsx(\"meta\",{name:\"keywords\",content:\"finance tracker, personal finance, expense management, budgeting tools\"})]}),/*#__PURE__*/_jsx(Navbar,{mode:mode,setMode:setMode}),/*#__PURE__*/_jsxs(\"div\",{id:\"budget-report\",className:\"min-h-screen bg-gradient-to-b from-gray-800 to-gray-400 text-white flex flex-col items-center p-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-4\",children:\"Expense Report\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-8\",children:\"Generate your financial report for the current month based on your budget.\"}),loading?/*#__PURE__*/_jsx(\"p\",{className:\"mt-6 text-lg\",children:\"Loading your budget data...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"mt-6 text-lg text-red-500\",children:error}):budget&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6 mt-8 w-[100vw] max-w-3xl text-gray-800 overflow-auto\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Generated Budget Report\"}),aiLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Generating AI response...\"}):aiResponse?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BudgetReport,{aiResponse:aiResponse}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadPDF,className:\"mt-6 py-2 px-4 bg-blue-500 text-white rounded-md\",children:\"Download as PDF\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No AI response generated yet.\"})]})]}),/*#__PURE__*/_jsx(Footer,{mode:mode})]});};export default GenerateReport;","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","Navbar","Footer","BudgetReport","html2pdf","jsx","_jsx","jsxs","_jsxs","GenerateReport","_ref","mode","setMode","budget","setBudgets","loading","setLoading","aiLoading","setAiLoading","error","setError","aiResponse","setAiResponse","navigate","fetchBudgets","token","localStorage","getItem","console","log","response","get","headers","Authorization","concat","data","budgets","err","fetchData","length","Array","isArray","budgetDetail","forEach","b","name","amount","spentAmount","startDate","endDate","expenses","e","date","description","promptData","prompt","post","responseData","replace","downloadPDF","element","document","getElementById","options","margin","filename","html2canvas","scale","jsPDF","unit","format","orientation","from","set","save","children","Helmet","content","id","className","onClick"],"sources":["C:/Users/Abhishek Kumar Roy/OneDrive/Desktop/finance_tracker/finance_tracker/src/pages/GenerateReport.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport BudgetReport from \"../components/BudgetReport\";\r\nimport html2pdf from \"html2pdf.js\";  // Import the html2pdf library\r\n\r\nconst GenerateReport = ({ mode, setMode }) => {\r\n    const [budget, setBudgets] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [aiLoading, setAiLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [aiResponse, setAiResponse] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch budget data\r\n    useEffect(() => {\r\n        const fetchBudgets = async () => {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                setError(\"Unauthorized! Please log in again.\");\r\n                navigate(\"/login\");\r\n                return;\r\n            }\r\n\r\n            console.log(\"Fetching budgets...\");\r\n\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get(\"https://finance-tracker-backend-0h5z.onrender.com/api/v1/getBudgetWithExpenses\", {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                console.log(\"Budget data received:\", response.data.budgets); // Log the received data\r\n                setBudgets(response.data.budgets || []);\r\n            } catch (err) {\r\n                console.error(\"Error fetching budgets:\", err);\r\n                setError(\"Failed to fetch budget data. Please try again later.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchBudgets();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // Fetch AI response based on budget data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (!budget.length || !Array.isArray(budget)) {\r\n                console.log(\"No valid budget data to process for AI response.\");\r\n                return;\r\n            }\r\n\r\n            let budgetDetail = \"\";\r\n            budget.forEach(b => {\r\n                budgetDetail += `Budget Name: ${b.name}\\n`;\r\n                budgetDetail += `Total Amount for Budget: ${b.amount}\\n`;\r\n                budgetDetail += `Spent Amount: ${b.spentAmount}\\n`;\r\n                budgetDetail += `Start Date: ${b.startDate}\\n`;\r\n                budgetDetail += `End Date: ${b.endDate}\\n`;\r\n\r\n                if (b.expenses && b.expenses.length > 0) {\r\n                    budgetDetail += `  Expenses:\\n`;\r\n                    b.expenses.forEach(e => {\r\n                        budgetDetail += `    - Amount: ${e.amount}\\n`;\r\n                        budgetDetail += `      Date: ${e.date}\\n`;\r\n                        budgetDetail += `      Description: ${e.description || \"No description available\"}\\n`;\r\n                    });\r\n                } else {\r\n                    budgetDetail += `  No expenses recorded for this budget.\\n`;\r\n                }\r\n\r\n                budgetDetail += '\\n'; // Separate budgets with a blank line\r\n            });\r\n\r\n            const promptData = {\r\n                prompt: \"Generate a detailed, styled budget report using Tailwind CSS, formatted for web rendering. The report should contain a series of individual sections for each budget, each in its own div with appropriate spacing from other sections. For each budget, include the following details:\\n\\n1. **Budget Overview**:\\n   - Total Amount: Display the total allocated amount for the budget.\\n   - Spent Amount: Show the total amount spent from the budget.\\n   - Remaining: Display the remaining balance. If overspent, display 'Overspent' with the negative amount in red.\\n   - Start Date: Display the starting date of the budget period.\\n   - End Date: Display the end date of the budget period.\\n\\n2. **Expense Details**:\\n   - List each recorded expense in an unordered list.\\n   - Each expense should include:\\n     - Amount: The cost of the expense.\\n     - Date: The date when the expense occurred.\\n     - Description: Provide a brief description if available, or state 'No description available.'\\n\\n3. **Suggestions**:\\n   - Offer 2-3 actionable suggestions for improving budget management based on the observed spending behavior (e.g., ways to reduce overspending, organize spending, etc.).\\n\\n4. **Styling Guidelines**:\\n   - Use Tailwind CSS classes to ensure the report is styled clearly and responsively.\\n   - Apply padding 'p-4', spacing 'space-y-4', borders 'border', and shadows 'shadow-md' for each section.\\n   - Headings should have bold text 'font-bold' and appropriate sizes (e.g., 'text-lg', 'text-xl').\\n   - For important details (like overspent amounts), use contrasting colors such as red 'text-red-500' to draw attention.\\n   - Ensure the layout is responsive and visually appealing, keeping spacing consistent and details clearly separated.\\n\\nThe final response should be wrapped in a single <div> element containing all the formatted sections with Tailwind CSS classes applied to ensure proper styling and structure. The budget details (including amounts, expenses, and suggestions) are as follows:\\n\\n\" + budgetDetail,\r\n            };\r\n\r\n            try {\r\n                setAiLoading(true);\r\n                const token = localStorage.getItem(\"token\");\r\n                if (!token) {\r\n                    setError(\"Unauthorized! Please log in again.\");\r\n                    navigate(\"/login\");\r\n                    return;\r\n                }\r\n\r\n                const response = await axios.post(\r\n                    \"https://finance-tracker-backend-0h5z.onrender.com/api/v1/getairesponse\",\r\n                    promptData, // Correctly pass the promptData here\r\n                    { headers: { Authorization: `Bearer ${token}` } }\r\n                );\r\n\r\n                console.log(\"AI response received:\", response.data); // Log the AI response\r\n                const responseData = response.data.response.replace(/```html|```/g, '');\r\n\r\n                // Now set the cleaned response to the state variable\r\n                setAiResponse(responseData);\r\n\r\n            } catch (error) {\r\n                console.error(\"Error fetching AI response:\", error);\r\n                setError(\"Failed to fetch AI response. Please try again later.\");\r\n            } finally {\r\n                setAiLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        // eslint-disable-next-line\r\n    }, [budget]);\r\n\r\n    // Function to download PDF\r\n    const downloadPDF = () => {\r\n        const element = document.getElementById(\"budget-report\");\r\n        const options = {\r\n            margin: 0,\r\n            filename: 'budget-report.pdf',\r\n            html2canvas: { scale: 1.5 },\r\n            jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },\r\n        };\r\n        html2pdf().from(element).set(options).save();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Helmet>\r\n        <title>Finance Tracker - Your Ultimate Finance Management Tool</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Simplify your finances with Finance Tracker. Track expenses, set budgets, and stay on top of your financial goals.\"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"finance tracker, personal finance, expense management, budgeting tools\"\r\n        />\r\n      </Helmet>\r\n            <Navbar mode={mode} setMode={setMode} />\r\n            <div id=\"budget-report\" className=\"min-h-screen bg-gradient-to-b from-gray-800 to-gray-400 text-white flex flex-col items-center p-6\">\r\n                <h1 className=\"text-4xl font-bold mb-4\">Expense Report</h1>\r\n                <p className=\"text-lg mb-8\">Generate your financial report for the current month based on your budget.</p>\r\n    \r\n                {loading ? (\r\n                    <p className=\"mt-6 text-lg\">Loading your budget data...</p>\r\n                ) : error ? (\r\n                    <p className=\"mt-6 text-lg text-red-500\">{error}</p>\r\n                ) : (\r\n                    budget && (\r\n                        <div className=\"bg-white rounded-lg shadow-lg p-6 mt-8 w-[100vw] max-w-3xl text-gray-800 overflow-auto\">\r\n                            <h2 className=\"text-xl font-bold mb-4\">Generated Budget Report</h2>\r\n                            {aiLoading ? (\r\n                                <p>Generating AI response...</p>\r\n                            ) : aiResponse ? (\r\n                                <div> \r\n                                    <BudgetReport aiResponse={aiResponse} />\r\n                                    <button\r\n                                        onClick={downloadPDF}\r\n                                        className=\"mt-6 py-2 px-4 bg-blue-500 text-white rounded-md\"\r\n                                    >\r\n                                        Download as PDF\r\n                                    </button>\r\n                                </div>\r\n                            ) : (\r\n                                <p>No AI response generated yet.</p>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n            <Footer mode={mode} />\r\n        </div>\r\n    );        \r\n};\r\n\r\nexport default GenerateReport;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CACrC,KAAM,CAACG,MAAM,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACzC,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACuB,UAAU,CAAEC,aAAa,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAyB,QAAQ,CAAGvB,WAAW,CAAC,CAAC,CAE9B;AACAH,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA2B,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACRL,QAAQ,CAAC,oCAAoC,CAAC,CAC9CG,QAAQ,CAAC,QAAQ,CAAC,CAClB,OACJ,CAEAK,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAElC,GAAI,CACAb,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAACgC,GAAG,CAAC,gFAAgF,CAAE,CAC/GC,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYT,KAAK,CAAG,CAChD,CAAC,CAAC,CACFG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEC,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAE;AAC7DtB,UAAU,CAACgB,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAI,EAAE,CAAC,CAC3C,CAAE,MAAOC,GAAG,CAAE,CACVT,OAAO,CAACT,KAAK,CAAC,yBAAyB,CAAEkB,GAAG,CAAC,CAC7CjB,QAAQ,CAAC,sDAAsD,CAAC,CACpE,CAAC,OAAS,CACNJ,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CACDQ,YAAY,CAAC,CAAC,CACd;AACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA3B,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAyC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CAACzB,MAAM,CAAC0B,MAAM,EAAI,CAACC,KAAK,CAACC,OAAO,CAAC5B,MAAM,CAAC,CAAE,CAC1Ce,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC,CAC/D,OACJ,CAEA,GAAI,CAAAa,YAAY,CAAG,EAAE,CACrB7B,MAAM,CAAC8B,OAAO,CAACC,CAAC,EAAI,CAChBF,YAAY,kBAAAR,MAAA,CAAoBU,CAAC,CAACC,IAAI,MAAI,CAC1CH,YAAY,8BAAAR,MAAA,CAAgCU,CAAC,CAACE,MAAM,MAAI,CACxDJ,YAAY,mBAAAR,MAAA,CAAqBU,CAAC,CAACG,WAAW,MAAI,CAClDL,YAAY,iBAAAR,MAAA,CAAmBU,CAAC,CAACI,SAAS,MAAI,CAC9CN,YAAY,eAAAR,MAAA,CAAiBU,CAAC,CAACK,OAAO,MAAI,CAE1C,GAAIL,CAAC,CAACM,QAAQ,EAAIN,CAAC,CAACM,QAAQ,CAACX,MAAM,CAAG,CAAC,CAAE,CACrCG,YAAY,iBAAmB,CAC/BE,CAAC,CAACM,QAAQ,CAACP,OAAO,CAACQ,CAAC,EAAI,CACpBT,YAAY,mBAAAR,MAAA,CAAqBiB,CAAC,CAACL,MAAM,MAAI,CAC7CJ,YAAY,iBAAAR,MAAA,CAAmBiB,CAAC,CAACC,IAAI,MAAI,CACzCV,YAAY,wBAAAR,MAAA,CAA0BiB,CAAC,CAACE,WAAW,EAAI,0BAA0B,MAAI,CACzF,CAAC,CAAC,CACN,CAAC,IAAM,CACHX,YAAY,6CAA+C,CAC/D,CAEAA,YAAY,EAAI,IAAI,CAAE;AAC1B,CAAC,CAAC,CAEF,KAAM,CAAAY,UAAU,CAAG,CACfC,MAAM,CAAE,s+DAAs+D,CAAGb,YACr/D,CAAC,CAED,GAAI,CACAxB,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAO,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACRL,QAAQ,CAAC,oCAAoC,CAAC,CAC9CG,QAAQ,CAAC,QAAQ,CAAC,CAClB,OACJ,CAEA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAACyD,IAAI,CAC7B,wEAAwE,CACxEF,UAAU,CAAE;AACZ,CAAEtB,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYT,KAAK,CAAG,CAAE,CACpD,CAAC,CAEDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEC,QAAQ,CAACK,IAAI,CAAC,CAAE;AACrD,KAAM,CAAAsB,YAAY,CAAG3B,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAAC4B,OAAO,CAAC,cAAc,CAAE,EAAE,CAAC,CAEvE;AACApC,aAAa,CAACmC,YAAY,CAAC,CAE/B,CAAE,MAAOtC,KAAK,CAAE,CACZS,OAAO,CAACT,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDC,QAAQ,CAAC,sDAAsD,CAAC,CACpE,CAAC,OAAS,CACNF,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAEDoB,SAAS,CAAC,CAAC,CACX;AACJ,CAAC,CAAE,CAACzB,MAAM,CAAC,CAAC,CAEZ;AACA,KAAM,CAAA8C,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CACxD,KAAM,CAAAC,OAAO,CAAG,CACZC,MAAM,CAAE,CAAC,CACTC,QAAQ,CAAE,mBAAmB,CAC7BC,WAAW,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAC,CAC3BC,KAAK,CAAE,CAAEC,IAAI,CAAE,IAAI,CAAEC,MAAM,CAAE,QAAQ,CAAEC,WAAW,CAAE,UAAW,CACnE,CAAC,CACDnE,QAAQ,CAAC,CAAC,CAACoE,IAAI,CAACZ,OAAO,CAAC,CAACa,GAAG,CAACV,OAAO,CAAC,CAACW,IAAI,CAAC,CAAC,CAChD,CAAC,CAED,mBACIlE,KAAA,QAAAmE,QAAA,eACAnE,KAAA,CAACoE,MAAM,EAAAD,QAAA,eACPrE,IAAA,UAAAqE,QAAA,CAAO,yDAAuD,CAAO,CAAC,cACtErE,IAAA,SACEuC,IAAI,CAAC,aAAa,CAClBgC,OAAO,CAAC,oHAAoH,CAC7H,CAAC,cACFvE,IAAA,SACEuC,IAAI,CAAC,UAAU,CACfgC,OAAO,CAAC,wEAAwE,CACjF,CAAC,EACI,CAAC,cACHvE,IAAA,CAACL,MAAM,EAACU,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CAAC,cACxCJ,KAAA,QAAKsE,EAAE,CAAC,eAAe,CAACC,SAAS,CAAC,mGAAmG,CAAAJ,QAAA,eACjIrE,IAAA,OAAIyE,SAAS,CAAC,yBAAyB,CAAAJ,QAAA,CAAC,gBAAc,CAAI,CAAC,cAC3DrE,IAAA,MAAGyE,SAAS,CAAC,cAAc,CAAAJ,QAAA,CAAC,4EAA0E,CAAG,CAAC,CAEzG5D,OAAO,cACJT,IAAA,MAAGyE,SAAS,CAAC,cAAc,CAAAJ,QAAA,CAAC,6BAA2B,CAAG,CAAC,CAC3DxD,KAAK,cACLb,IAAA,MAAGyE,SAAS,CAAC,2BAA2B,CAAAJ,QAAA,CAAExD,KAAK,CAAI,CAAC,CAEpDN,MAAM,eACFL,KAAA,QAAKuE,SAAS,CAAC,wFAAwF,CAAAJ,QAAA,eACnGrE,IAAA,OAAIyE,SAAS,CAAC,wBAAwB,CAAAJ,QAAA,CAAC,yBAAuB,CAAI,CAAC,CAClE1D,SAAS,cACNX,IAAA,MAAAqE,QAAA,CAAG,2BAAyB,CAAG,CAAC,CAChCtD,UAAU,cACVb,KAAA,QAAAmE,QAAA,eACIrE,IAAA,CAACH,YAAY,EAACkB,UAAU,CAAEA,UAAW,CAAE,CAAC,cACxCf,IAAA,WACI0E,OAAO,CAAErB,WAAY,CACrBoB,SAAS,CAAC,kDAAkD,CAAAJ,QAAA,CAC/D,iBAED,CAAQ,CAAC,EACR,CAAC,cAENrE,IAAA,MAAAqE,QAAA,CAAG,+BAA6B,CAAG,CACtC,EACA,CAEZ,EACA,CAAC,cACNrE,IAAA,CAACJ,MAAM,EAACS,IAAI,CAAEA,IAAK,CAAE,CAAC,EACrB,CAAC,CAEd,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}