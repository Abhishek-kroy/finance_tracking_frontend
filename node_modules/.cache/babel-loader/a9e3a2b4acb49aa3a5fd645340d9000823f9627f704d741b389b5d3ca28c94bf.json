{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import axios from'axios';import{useNavigate}from'react-router-dom';import{Chart,PointElement,LineElement,LinearScale,Title,Tooltip,Legend}from'chart.js';// Register required components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(PointElement,LineElement,LinearScale,Title,Tooltip,Legend);const ExpenseTrends=_ref=>{let{mode}=_ref;const[expenses,setExpenses]=useState([]);const[chartData,setChartData]=useState({});const[startDate,setStartDate]=useState('');const[endDate,setEndDate]=useState('');const navigate=useNavigate();const getCurrentMonthDates=()=>{const now=new Date();const firstDay=new Date(now.getFullYear(),now.getMonth(),1).toISOString().split('T')[0];const lastDay=new Date(now.getFullYear(),now.getMonth()+1,0).toISOString().split('T')[0];return{firstDay,lastDay};};useEffect(()=>{const fetchExpenses=async()=>{try{const{firstDay,lastDay}=getCurrentMonthDates();const token=localStorage.getItem(\"token\");if(!token){console.log(\"Unauthorized! Redirecting to login.\");navigate(\"/login\");return;}const response=await axios.get('https://finance-tracker-backend-0h5z.onrender.com/api/v1/getexpense',{params:{startDate:firstDay,endDate:lastDay},headers:{Authorization:\"Bearer \".concat(token)}});setExpenses(response.data.expenses);console.log(response.data.expenses);}catch(error){console.error('Error fetching expenses:',error);}};fetchExpenses();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Empty dependency array ensures one-time execution    \nuseEffect(()=>{const showLinerChart=()=>{const expenseData=expenses;expenseData.sort((a,b)=>new Date(a.date)-new Date(b.date));// Sort expenses by date\nconst groupedExpenses=expenseData.reduce((acc,expense)=>{const date=new Date(expense.date).toLocaleDateString();if(acc[date]){acc[date]+=expense.amount;}else{acc[date]=expense.amount;}return acc;},{});// Convert grouped data to arrays\nconst dates=Object.keys(groupedExpenses);const amounts=Object.values(groupedExpenses);setExpenses(expenseData);setChartData({labels:dates,datasets:[{label:'Expenses Over Time',data:amounts,fill:false,borderColor:'#FF5733',tension:0.1}]});};showLinerChart();},[expenses]);const handleFilter=async e=>{e.preventDefault();if(!startDate||!endDate){alert('Please select both start and end dates.');return;}try{const token=localStorage.getItem(\"token\");if(!token){navigate(\"/login\");return;}const response=await axios.get('https://finance-tracker-backend-0h5z.onrender.com/api/v1/getexpense',{params:{startDate:startDate,endDate:endDate},headers:{Authorization:\"Bearer \".concat(token)}});const expenseData=response.data.expenses;expenseData.sort((a,b)=>new Date(a.date)-new Date(b.date));// Group expenses by date and sum the amounts for each date\nconst groupedExpenses=expenseData.reduce((acc,expense)=>{const date=new Date(expense.date).toLocaleDateString();if(acc[date]){acc[date]+=expense.amount;}else{acc[date]=expense.amount;}return acc;},{});// Convert grouped data to arrays\nconst dates=Object.keys(groupedExpenses);const amounts=Object.values(groupedExpenses);setExpenses(expenseData);// Prepare chart data\nsetChartData({labels:dates,datasets:[{label:\"Expenses from \".concat(startDate,\" to \").concat(endDate),data:amounts,fill:false,borderColor:'#36A2EB',tension:0.1}]});}catch(error){console.error('Error fetching filtered expenses:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"Expense Trends Over Time\"}),/*#__PURE__*/_jsx(\"form\",{className:\"mb-6\",onSubmit:handleFilter,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value),className:\"border p-2 rounded ml-2 \".concat(mode===\"dark\"?'bg-gray-600':'bg-white')})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value),className:\"border p-2 rounded ml-2 \".concat(mode===\"dark\"?'bg-gray-600':'bg-white')})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white px-4 py-2 rounded\",children:\"Filter\"})]})}),chartData.labels&&chartData.labels.length>0?/*#__PURE__*/_jsx(Line,{data:chartData}):/*#__PURE__*/_jsx(\"p\",{children:\"No expense data available for the selected period.\"})]});};export default ExpenseTrends;","map":{"version":3,"names":["React","useState","useEffect","Line","axios","useNavigate","Chart","PointElement","LineElement","LinearScale","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ExpenseTrends","_ref","mode","expenses","setExpenses","chartData","setChartData","startDate","setStartDate","endDate","setEndDate","navigate","getCurrentMonthDates","now","Date","firstDay","getFullYear","getMonth","toISOString","split","lastDay","fetchExpenses","token","localStorage","getItem","console","log","response","get","params","headers","Authorization","concat","data","error","showLinerChart","expenseData","sort","a","b","date","groupedExpenses","reduce","acc","expense","toLocaleDateString","amount","dates","Object","keys","amounts","values","labels","datasets","label","fill","borderColor","tension","handleFilter","e","preventDefault","alert","className","children","onSubmit","type","value","onChange","target","length"],"sources":["C:/Users/Abhishek Kumar Roy/OneDrive/Desktop/finance_tracker/finance_tracker/src/components/ExpenseTrends.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Chart,\r\n    PointElement,\r\n    LineElement,\r\n    LinearScale,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\n// Register required components\r\nChart.register(PointElement, LineElement, LinearScale, Title, Tooltip, Legend);\r\n\r\nconst ExpenseTrends = ({ mode }) => {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const getCurrentMonthDates = () => {\r\n        const now = new Date();\r\n        const firstDay = new Date(now.getFullYear(), now.getMonth(), 1).toISOString().split('T')[0];\r\n        const lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0).toISOString().split('T')[0];\r\n        return { firstDay, lastDay };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchExpenses = async () => {\r\n            try {\r\n                const { firstDay, lastDay } = getCurrentMonthDates();\r\n                const token = localStorage.getItem(\"token\");\r\n                if (!token) {\r\n                    console.log(\"Unauthorized! Redirecting to login.\");\r\n                    navigate(\"/login\");\r\n                    return;\r\n                }\r\n    \r\n                const response = await axios.get('https://finance-tracker-backend-0h5z.onrender.com/api/v1/getexpense', {\r\n                    params: { startDate: firstDay, endDate: lastDay },\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n    \r\n                setExpenses(response.data.expenses);\r\n                console.log(response.data.expenses);\r\n            } catch (error) {\r\n                console.error('Error fetching expenses:', error);\r\n            }\r\n        }; \r\n        fetchExpenses();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []); // Empty dependency array ensures one-time execution    \r\n\r\n    useEffect(() => {\r\n        const showLinerChart = () => {\r\n            const expenseData=expenses;\r\n            expenseData.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n            // Sort expenses by date\r\n\r\n            const groupedExpenses = expenseData.reduce((acc, expense) => {\r\n                const date = new Date(expense.date).toLocaleDateString();\r\n                if (acc[date]) {\r\n                    acc[date] += expense.amount;\r\n                } else {\r\n                    acc[date] = expense.amount;\r\n                }\r\n                return acc;\r\n            }, {});\r\n\r\n            // Convert grouped data to arrays\r\n            const dates = Object.keys(groupedExpenses);\r\n            const amounts = Object.values(groupedExpenses);\r\n\r\n            setExpenses(expenseData);\r\n\r\n            setChartData({\r\n                labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'Expenses Over Time',\r\n                        data: amounts,\r\n                        fill: false,\r\n                        borderColor: '#FF5733',\r\n                        tension: 0.1,\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n        showLinerChart();\r\n    }, [expenses]);\r\n\r\n    const handleFilter = async (e) => {\r\n        e.preventDefault();\r\n        if (!startDate || !endDate) {\r\n            alert('Please select both start and end dates.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                navigate(\"/login\");\r\n                return;\r\n            }\r\n            const response = await axios.get('https://finance-tracker-backend-0h5z.onrender.com/api/v1/getexpense', {\r\n                params: { startDate: startDate, endDate: endDate },\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n\r\n            const expenseData = response.data.expenses;\r\n            expenseData.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n            // Group expenses by date and sum the amounts for each date\r\n            const groupedExpenses = expenseData.reduce((acc, expense) => {\r\n                const date = new Date(expense.date).toLocaleDateString();\r\n                if (acc[date]) {\r\n                    acc[date] += expense.amount;\r\n                } else {\r\n                    acc[date] = expense.amount;\r\n                }\r\n                return acc;\r\n            }, {});\r\n\r\n            // Convert grouped data to arrays\r\n            const dates = Object.keys(groupedExpenses);\r\n            const amounts = Object.values(groupedExpenses);\r\n\r\n            setExpenses(expenseData);\r\n\r\n            // Prepare chart data\r\n            setChartData({\r\n                labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: `Expenses from ${startDate} to ${endDate}`,\r\n                        data: amounts,\r\n                        fill: false,\r\n                        borderColor: '#36A2EB',\r\n                        tension: 0.1,\r\n                    },\r\n                ],\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching filtered expenses:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Expense Trends Over Time</h3>\r\n\r\n            {/* Filter Form */}\r\n            <form className=\"mb-6\" onSubmit={handleFilter}>\r\n                <div className=\"flex items-center gap-4\">\r\n                    <label>\r\n                        Start Date:\r\n                        <input\r\n                            type=\"date\"\r\n                            value={startDate}\r\n                            onChange={(e) => setStartDate(e.target.value)}\r\n                            className={`border p-2 rounded ml-2 ${mode === \"dark\" ? 'bg-gray-600' : 'bg-white'}`}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        End Date:\r\n                        <input\r\n                            type=\"date\"\r\n                            value={endDate}\r\n                            onChange={(e) => setEndDate(e.target.value)}\r\n                            className={`border p-2 rounded ml-2 ${mode === \"dark\" ? 'bg-gray-600' : 'bg-white'}`}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n                        Filter\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            {/* Line Chart */}\r\n            {chartData.labels && chartData.labels.length > 0 ? (\r\n                <Line data={chartData} />\r\n            ) : (\r\n                <p>No expense data available for the selected period.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseTrends;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}